definitions:
  api_response.ApiResponse:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  model_question.AddQuestionRequest:
    properties:
      answer:
        description: '"题目答案"'
        items:
          type: string
        type: array
      content:
        description: '"内容"'
        type: string
      judge_case:
        description: '"判题用例json数组"'
        items:
          $ref: '#/definitions/model_question.JudgeCase'
        type: array
      judge_config:
        allOf:
        - $ref: '#/definitions/model_question.JudgeConfig'
        description: '"判题配置json对象"'
      tag:
        description: '"标签列表json数组"'
        type: string
      title:
        description: '"标题"'
        type: string
      user_id:
        description: '"创建用户id"'
        type: string
    type: object
  model_question.AddQuestionSubmitRequest:
    properties:
      code:
        description: '"用户代码"'
        type: string
      language:
        description: '"编程语言"'
        type: string
      question_id:
        description: '"题目id"'
        type: string
    type: object
  model_question.JudgeCase:
    properties:
      input:
        type: string
      output:
        type: string
    type: object
  model_question.JudgeConfig:
    properties:
      memory_limit:
        type: integer
      time_limit:
        type: integer
    type: object
  model_question.JudgeInfo:
    properties:
      memory:
        description: 单位为kb
        type: integer
      message:
        description: 值为以上枚举值
        type: string
      time:
        description: 单位为ms
        type: integer
    type: object
  model_question.QueryQuestionRequest:
    properties:
      content:
        description: '"内容"'
        type: string
      id:
        type: string
      page:
        type: integer
      page_size:
        type: integer
      tag:
        description: '"标签列表json数组"'
        type: string
      title:
        description: '"标题"'
        type: string
      user_id:
        description: '"创建用户id"'
        type: string
    type: object
  model_question.QueryQuestionSubmitRequest:
    properties:
      answer:
        description: '"答案"'
        type: string
      language:
        description: '"编程语言"'
        type: string
      page:
        type: integer
      page_size:
        type: integer
      question_id:
        description: '"判题id"'
        type: string
      status:
        description: '"判题状态（0-待判题,1-判题中,2-成功,3-失败)",'
        type: integer
      user_id:
        description: '"创建用户id"'
        type: string
    type: object
  model_question.ReturnQS:
    properties:
      answer:
        description: '"答案"'
        items:
          type: string
        type: array
      judge_info:
        description: '"判题信息json对象(包含上面的枚举值)'
        items:
          $ref: '#/definitions/model_question.JudgeInfo'
        type: array
      language:
        description: '"编程语言"'
        type: string
      question_id:
        description: 题目id
        type: string
      status:
        description: '"判题状态（0-待判题,1-判题中,2-成功,3-失败)",'
        type: integer
    type: object
  model_question.ReturnQuestion:
    properties:
      accept_num:
        description: '"题目通过数"'
        type: integer
      answer:
        description: '"题目答案"'
        items:
          type: string
        type: array
      content:
        description: '"内容"'
        type: string
      id:
        type: string
      judge_config:
        allOf:
        - $ref: '#/definitions/model_question.JudgeConfig'
        description: '"判题配置json对象"'
      submit_num:
        description: '"题目提交数'
        type: integer
      tag:
        description: '"标签列表json数组"'
        type: string
      thum_num:
        description: '"点赞数"'
        type: integer
      title:
        description: '"标题"'
        type: string
      user_id:
        description: 用户id
        type: string
    type: object
  model_question.UpdateQuestionRequest:
    properties:
      answer:
        description: '"题目答案"'
        items:
          type: string
        type: array
      content:
        description: '"内容"'
        type: string
      id:
        type: string
      judge_case:
        description: '"判题用例json数组"'
        items:
          $ref: '#/definitions/model_question.JudgeCase'
        type: array
      judge_config:
        allOf:
        - $ref: '#/definitions/model_question.JudgeConfig'
        description: '"判题配置json对象"'
      tag:
        description: '"标签列表json数组"'
        type: string
      title:
        description: '"标题"'
        type: string
    type: object
  model_user.AddUserRequest:
    properties:
      avatar_url:
        type: string
      user_account:
        maxLength: 32
        minLength: 3
        type: string
      user_name:
        type: string
      user_password:
        maxLength: 32
        minLength: 7
        type: string
    required:
    - user_account
    - user_password
    type: object
  model_user.AdminUserQueryRequest:
    properties:
      create_time:
        description: 创建时间
        type: string
      id:
        description: id
        type: string
      is_delete:
        description: 是否删除
        type: integer
      page:
        type: integer
      page_size:
        type: integer
      user_account:
        description: 用户账号
        type: string
      user_name:
        description: 用户昵称
        type: string
      user_role:
        description: 匿名用户，普通用户，管理员，禁用用户
        type: string
    type: object
  model_user.EditUserRequest:
    properties:
      avatar_url:
        type: string
      user_account:
        type: string
      user_name:
        type: string
      user_password:
        type: string
      user_role:
        type: string
    type: object
  model_user.LoginUserRequest:
    properties:
      user_account:
        type: string
      user_password:
        type: string
    type: object
  model_user.ReturnAdminUser:
    properties:
      avatar_url:
        type: string
      create_time:
        type: string
      id:
        type: string
      user_account:
        type: string
      user_name:
        type: string
      user_role:
        type: string
    type: object
  model_user.ReturnUser:
    properties:
      avatar_url:
        type: string
      create_time:
        type: string
      id:
        type: string
      user_account:
        type: string
      user_name:
        type: string
    type: object
  model_user.UpdateUserRequest:
    properties:
      avatar_url:
        type: string
      user_name:
        type: string
      user_password:
        type: string
    type: object
  model_user.UserQueryRequest:
    properties:
      id:
        description: id
        type: string
      page:
        description: 查询页号
        type: integer
      page_size:
        description: 查询页大小
        type: integer
      user_account:
        description: 用户账号
        type: string
      user_name:
        description: 用户昵称
        type: string
    type: object
info:
  contact: {}
  title: 用户管理系统
  version: "0.1"
paths:
  /api/question/admin/add:
    post:
      consumes:
      - application/json
      description: Add question
      parameters:
      - description: Add question
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/model_question.AddQuestionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Add question success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Add  question fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Add question
      tags:
      - Question
  /api/question/admin/delete:
    get:
      consumes:
      - application/json
      description: Delete question
      parameters:
      - description: Question id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete  success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Delete fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Delete question
      tags:
      - Question
  /api/question/admin/update:
    post:
      consumes:
      - application/json
      description: Update question
      parameters:
      - description: Update condition
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/model_question.UpdateQuestionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Update fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Update question
      tags:
      - Question
  /api/question/query:
    get:
      consumes:
      - application/json
      description: Query question
      parameters:
      - description: Question id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query question success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/model_question.ReturnQuestion'
              type: object
        "400":
          description: Query question fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Query question
      tags:
      - Question
    post:
      consumes:
      - application/json
      description: Get question list
      parameters:
      - description: Query conditions
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/model_question.QueryQuestionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Get question list success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model_question.ReturnQuestion'
                  type: array
              type: object
        "400":
          description: Get question list failed
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Get question list
      tags:
      - Question
  /api/submit/add:
    post:
      consumes:
      - application/json
      description: Submit
      parameters:
      - description: Submit code
        in: body
        name: model_question
        required: true
        schema:
          $ref: '#/definitions/model_question.AddQuestionSubmitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Submit success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Submit failed
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Submit
      tags:
      - QuestionSubmit
  /api/submit/query:
    get:
      consumes:
      - application/json
      description: Get question submit result
      parameters:
      - description: Query id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query  success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/model_question.ReturnQS'
              type: object
        "400":
          description: Query fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Get question submit result
      tags:
      - QuestionSubmit
    post:
      consumes:
      - application/json
      description: Get question submit list
      parameters:
      - description: Query condition
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/model_question.QueryQuestionSubmitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Query  success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model_question.ReturnQS'
                  type: array
              type: object
        "400":
          description: Query fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Get question submit list
      tags:
      - QuestionSubmit
  /api/user/admin/delete:
    get:
      consumes:
      - application/json
      description: DeleteUser user  by user account
      parameters:
      - description: User account
        in: path
        name: user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete user success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Delete user fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: DeleteUser user
      tags:
      - User
  /api/user/admin/query:
    post:
      consumes:
      - application/json
      description: Query user list for admin
      parameters:
      - description: queries
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model_user.AdminUserQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Query success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model_user.ReturnAdminUser'
                  type: array
              type: object
        "400":
          description: Query fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Admin query
      tags:
      - User
  /api/user/admin/update:
    post:
      consumes:
      - application/json
      description: Admin edit user information
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model_user.EditUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Edit user request success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Edit user request fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Admin edit user information
      tags:
      - User
  /api/user/login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model_user.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/model_user.ReturnUser'
              type: object
        "400":
          description: Login fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Login
      tags:
      - User
  /api/user/logout:
    get:
      description: User logout
      produces:
      - application/json
      responses:
        "200":
          description: Logout success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Logout fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Logout
      tags:
      - User
  /api/user/query:
    post:
      consumes:
      - application/json
      description: Query user list
      parameters:
      - description: Query
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model_user.UserQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Query success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model_user.ReturnUser'
                  type: array
              type: object
        "400":
          description: Query fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Query user
      tags:
      - User
  /api/user/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model_user.AddUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Register success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Register fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Register
      tags:
      - User
  /api/user/update:
    post:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: Update information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model_user.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update user request success
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Update user request fail
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ApiResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Update user
      tags:
      - User
swagger: "2.0"
